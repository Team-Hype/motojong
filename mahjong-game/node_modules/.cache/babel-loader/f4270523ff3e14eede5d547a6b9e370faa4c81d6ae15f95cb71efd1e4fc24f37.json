{"ast":null,"code":"var _jsxFileName = \"/home/peplxx/projects/mahjong/mahjong-game/src/components/GridCell.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGridCell = styled(motion.div)`\n  background-image: ${({\n  mahjong\n}) => `url(${mahjong ? mahjong.image : ''})`};\n  background-size: cover;\n  background-position: center;\n  cursor: ${({\n  isBlocked\n}) => isBlocked ? 'not-allowed' : 'grab'};\n  position: absolute;\n  top: ${({\n  row,\n  height,\n  gap\n}) => row * (height + gap)}px;\n  left: ${({\n  column,\n  width,\n  gap\n}) => column * (width + gap)}px;\n  width: ${({\n  width\n}) => width * 2}px;\n  height: ${({\n  height\n}) => height * 2}px;\n  ${({\n  mahjong\n}) => !mahjong && 'pointer-events: none;'}\n  filter: ${({\n  isBlocked\n}) => isBlocked ? 'brightness(0.5)' : 'none'};\n  ${({\n  isBlocked,\n  isSelected\n}) => isBlocked ? '' : isSelected && 'filter: brightness(0.7) contrast(1.1) sepia(0.7) hue-rotate(10deg) saturate(3);'}\n`;\n_c = StyledGridCell;\nconst GridCell = ({\n  column,\n  row,\n  gap,\n  height,\n  width,\n  isBlocked,\n  isSelected,\n  onClick,\n  mahjong\n}) => {\n  _s();\n  // Animation state for when a match is found\n  const [animateMatch, setAnimateMatch] = React.useState(false);\n\n  // Optionally trigger an animation when the cell is clicked (for the match found)\n  React.useEffect(() => {\n    if (isSelected) {\n      setAnimateMatch(true);\n      setTimeout(() => setAnimateMatch(false), 1000); // Reset after animation duration\n    }\n  }, [isSelected]);\n  return /*#__PURE__*/_jsxDEV(StyledGridCell, {\n    isBlocked: isBlocked,\n    onClick: isBlocked ? e => e.preventDefault() : onClick,\n    isSelected: isSelected,\n    mahjong: mahjong,\n    whileHover: isBlocked ? undefined : {\n      scale: 1.05\n    },\n    whileTap: isBlocked ? undefined : {\n      scale: 0.95\n    },\n    whileDrag: isBlocked ? undefined : {\n      scale: 0.95\n    },\n    column: column,\n    row: row,\n    gap: gap,\n    height: height,\n    width: width,\n    drag: isBlocked ? false : true,\n    dragConstraints: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    initial: animateMatch ? {\n      y: -10,\n      opacity: 0.5\n    } : {\n      y: 0,\n      opacity: 1\n    },\n    animate: animateMatch ? {\n      y: 0,\n      opacity: 1,\n      transition: {\n        type: 'spring',\n        stiffness: 300,\n        // Adjust stiffness for desired effect\n        damping: 20,\n        // Adjust damping for more or less bounce\n        duration: 0.5\n      }\n    } : {},\n    exit: {\n      opacity: 0,\n      scale: 0.8\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(GridCell, \"7Ks2da3eWO2Y/fkQQuKI+2QuhAs=\");\n_c2 = GridCell;\nexport default GridCell;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledGridCell\");\n$RefreshReg$(_c2, \"GridCell\");","map":{"version":3,"names":["React","styled","motion","jsxDEV","_jsxDEV","StyledGridCell","div","mahjong","image","isBlocked","row","height","gap","column","width","isSelected","_c","GridCell","onClick","_s","animateMatch","setAnimateMatch","useState","useEffect","setTimeout","e","preventDefault","whileHover","undefined","scale","whileTap","whileDrag","drag","dragConstraints","top","left","right","bottom","initial","y","opacity","animate","transition","type","stiffness","damping","duration","exit","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/peplxx/projects/mahjong/mahjong-game/src/components/GridCell.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Mahjong } from './game/mahjongs/Mahjong';\n\ntype GridCellProps = {\n  isSelected: boolean;\n  isBlocked: boolean;\n  onClick: (e: React.MouseEvent) => void;\n  mahjong: (Mahjong | null);\n  column: number;\n  row: number;\n  gap: number;\n  height: number;\n  width: number;\n};\n\nconst StyledGridCell = styled(motion.div)<{\n  row: number;\n  column: number;\n  width: number;\n  height: number;\n  gap: number;\n  isBlocked: boolean;\n  isSelected: boolean;\n  mahjong: (Mahjong | null);\n}>`\n  background-image: ${({ mahjong }) => `url(${mahjong ? mahjong.image : ''})`};\n  background-size: cover;\n  background-position: center;\n  cursor: ${({ isBlocked }) => (isBlocked ? 'not-allowed' : 'grab')};\n  position: absolute;\n  top: ${({ row, height, gap }) => (row * (height + gap))}px;\n  left: ${({ column, width, gap }) => column * (width + gap)}px;\n  width: ${({ width }) => width * 2}px;\n  height: ${({ height }) => height * 2}px;\n  ${({ mahjong }) => !mahjong && 'pointer-events: none;'}\n  filter: ${({ isBlocked }) => (isBlocked ? 'brightness(0.5)' : 'none')};\n  ${({ isBlocked, isSelected }) => isBlocked ? '' : isSelected && 'filter: brightness(0.7) contrast(1.1) sepia(0.7) hue-rotate(10deg) saturate(3);'}\n`;\n\nconst GridCell: React.FC<GridCellProps> = ({\n  column,\n  row,\n  gap,\n  height,\n  width,\n  isBlocked,\n  isSelected,\n  onClick,\n  mahjong,\n}) => {\n  // Animation state for when a match is found\n  const [animateMatch, setAnimateMatch] = React.useState(false);\n\n  // Optionally trigger an animation when the cell is clicked (for the match found)\n  React.useEffect(() => {\n    if (isSelected) {\n      setAnimateMatch(true);\n      setTimeout(() => setAnimateMatch(false), 1000); // Reset after animation duration\n    }\n  }, [isSelected]);\n\n  return (\n    <StyledGridCell\n      isBlocked={isBlocked}\n      onClick={isBlocked ? (e) => e.preventDefault() : onClick}\n      isSelected={isSelected}\n      mahjong={mahjong}\n      whileHover={isBlocked ? undefined : { scale: 1.05 }}\n      whileTap={isBlocked ? undefined : { scale: 0.95 }}\n      whileDrag={isBlocked ? undefined : { scale: 0.95 }}\n      column={column}\n      row={row}\n      gap={gap}\n      height={height}\n      width={width}\n      drag={isBlocked ? false : true}\n      dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }}\n      initial={animateMatch ? { y: -10, opacity: 0.5 } : { y: 0, opacity: 1 }}\n      animate={animateMatch ? {\n        y: 0,\n        opacity: 1,\n        transition: {\n          type: 'spring',\n          stiffness: 300, // Adjust stiffness for desired effect\n          damping: 20, // Adjust damping for more or less bounce\n          duration: 0.5,\n        }\n      } : {}}\n      exit={{ opacity: 0, scale: 0.8 }}\n    />\n  );\n};\n\nexport default GridCell;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}