{"ast":null,"code":"var _jsxFileName = \"/home/peplxx/projects/mahjong/mahjong-game/src/components/grid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayerContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n`;\n_c = LayerContainer;\nconst StyledGrid = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(${({\n  columns\n}) => columns}, ${({\n  width\n}) => width}px);\n  grid-template-rows: repeat(${({\n  rows\n}) => rows}, ${({\n  height\n}) => height}px);\n  grid-gap: ${({\n  gap\n}) => gap}px;\n  justify-content: center;\n  align-content: center;\n  background-color: rgba(40, 44, 52, 0.5);\n  position: absolute; \n  top: 0;\n  height: 100%;\n  width: 100%;\n  left: 0;\n`;\n_c2 = StyledGrid;\nconst GridCell = styled(motion.div)`\n  background-color: ${({\n  isSelected\n}) => isSelected ? 'rgba(40, 44, 52, 0.5)' : 'red'};\n  &:hover {transform: scale(1.05);}\n  &:active {transform: scale(0.95);}\n`;\n_c3 = GridCell;\nconst Grid = ({\n  columns,\n  rows,\n  gap,\n  height,\n  width,\n  style\n}) => {\n  _s();\n  const [selectedCells, setSelectedCells] = useState({});\n  const onCellClick = index => {\n    setSelectedCells(selectedCells => {\n      return {\n        ...selectedCells,\n        [index]: !selectedCells[index]\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(StyledGrid, {\n    columns: columns,\n    rows: rows,\n    gap: gap,\n    height: height,\n    width: width,\n    style: style,\n    children: [...Array(columns * rows)].map((_, index) => /*#__PURE__*/_jsxDEV(GridCell, {\n      onClick: () => onCellClick(index),\n      isSelected: selectedCells[index],\n      drag: true,\n      dragConstraints: {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"GLWHfO5BGqkKP3qftTnleplvfGg=\");\n_c4 = Grid;\nconst MultiLayerGrid = () => {\n  return /*#__PURE__*/_jsxDEV(LayerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      columns: 10,\n      rows: 6,\n      gap: 5,\n      height: 150,\n      width: 100,\n      style: {\n        zIndex: 1,\n        backgroundColor: '#41454C'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 9,\n      rows: 5,\n      gap: 5,\n      height: 150,\n      width: 100,\n      style: {\n        zIndex: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 8,\n      rows: 4,\n      gap: 5,\n      height: 150,\n      width: 100,\n      style: {\n        zIndex: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c5 = MultiLayerGrid;\nexport default MultiLayerGrid;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"LayerContainer\");\n$RefreshReg$(_c2, \"StyledGrid\");\n$RefreshReg$(_c3, \"GridCell\");\n$RefreshReg$(_c4, \"Grid\");\n$RefreshReg$(_c5, \"MultiLayerGrid\");","map":{"version":3,"names":["React","useState","styled","motion","jsxDEV","_jsxDEV","LayerContainer","div","_c","StyledGrid","columns","width","rows","height","gap","_c2","GridCell","isSelected","_c3","Grid","style","_s","selectedCells","setSelectedCells","onCellClick","index","children","Array","map","_","onClick","drag","dragConstraints","top","left","right","bottom","fileName","_jsxFileName","lineNumber","columnNumber","_c4","MultiLayerGrid","zIndex","backgroundColor","_c5","$RefreshReg$"],"sources":["/home/peplxx/projects/mahjong/mahjong-game/src/components/grid.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\ntype GridProps = {\n  columns: number;\n  rows: number;\n  gap: number;\n  height: number;\n  width: number;\n  style?: React.CSSProperties;\n};\n\nconst LayerContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst StyledGrid = styled(motion.div)<GridProps>`\n  display: grid;\n  grid-template-columns: repeat(${({ columns }) => columns}, ${({ width }) => width}px);\n  grid-template-rows: repeat(${({ rows }) => rows}, ${({ height }) => height}px);\n  grid-gap: ${({ gap }) => gap}px;\n  justify-content: center;\n  align-content: center;\n  background-color: rgba(40, 44, 52, 0.5);\n  position: absolute; \n  top: 0;\n  height: 100%;\n  width: 100%;\n  left: 0;\n`;\n\nconst GridCell = styled(motion.div)`\n  background-color: ${({ isSelected }) => isSelected ? 'rgba(40, 44, 52, 0.5)' : 'red'};\n  &:hover {transform: scale(1.05);}\n  &:active {transform: scale(0.95);}\n`;\n\nconst Grid = ({ columns, rows, gap, height, width, style }: GridProps) => {\n  const [selectedCells, setSelectedCells] = useState<{[key: number]: boolean}>({});\n\n  const onCellClick = (index: number) => {\n    setSelectedCells((selectedCells) => {\n      return {\n        ...selectedCells,\n        [index]: !selectedCells[index],\n      };\n    });\n  };\n\n  return (\n    <StyledGrid columns={columns} rows={rows} gap={gap} height={height} width={width} style={style}>\n      {[...Array(columns * rows)].map((_, index) => (\n        <GridCell onClick={() => onCellClick(index)} isSelected={selectedCells[index]} key={index} drag={true} dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }} />\n      ))}\n    </StyledGrid>\n  );\n};\n\nconst MultiLayerGrid = () => {\n  return (\n    <LayerContainer>\n      <Grid columns={10} rows={6} gap={5} height={150} width={100} style={{ zIndex: 1, backgroundColor: '#41454C' }} />\n      <Grid columns={9} rows={5} gap={5} height={150} width={100} style={{ zIndex: 2}} />\n      <Grid columns={8} rows={4} gap={5} height={150} width={100} style={{ zIndex: 3}} />\n\n    </LayerContainer>\n  );\n};\n\nexport default MultiLayerGrid;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}