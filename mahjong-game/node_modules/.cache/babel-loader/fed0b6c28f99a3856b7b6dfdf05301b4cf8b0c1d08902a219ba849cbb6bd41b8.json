{"ast":null,"code":"var _jsxFileName = \"/home/peplxx/projects/mahjong/mahjong-game/src/components/grid.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayerContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n`;\n_c = LayerContainer;\nconst StyledGrid = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(${({\n  columns\n}) => columns}, ${({\n  width\n}) => width}px);\n  grid-template-rows: repeat(${({\n  rows\n}) => rows}, ${({\n  height\n}) => height}px);\n  grid-gap: ${({\n  gap\n}) => gap}px;\n  justify-content: center;\n  align-content: center;\n  background-color: rgba(40, 44, 52, 0.8); /* Semi-transparent background */\n  position: absolute; /* Allow overlapping layers */\n  top: 0;\n  height: 100%;\n  width: 100%;\n  left: 0;\n`;\n_c2 = StyledGrid;\nconst GridCell = styled(motion.div)`\n  background-color: red;\n  border: 1px solid white;\n  &:hover {\n    transform: scale(1.05);\n  }\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n_c3 = GridCell;\nconst Grid = ({\n  columns,\n  rows,\n  gap,\n  height,\n  width,\n  style\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledGrid, {\n    columns: columns,\n    rows: rows,\n    gap: gap,\n    height: height,\n    width: width,\n    style: style,\n    children: [...Array(columns * rows)].map((_, index) => /*#__PURE__*/_jsxDEV(GridCell, {\n      drag: true,\n      dragConstraints: {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Grid;\nconst MultiLayerGrid = () => {\n  return /*#__PURE__*/_jsxDEV(LayerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      columns: 6,\n      rows: 6,\n      gap: 5,\n      height: 150,\n      width: 100,\n      style: {\n        zIndex: 1,\n        backgroundColor: '#41454C'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 4,\n      rows: 4,\n      gap: 5,\n      height: 150,\n      width: 100,\n      style: {\n        zIndex: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c5 = MultiLayerGrid;\nexport default MultiLayerGrid;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"LayerContainer\");\n$RefreshReg$(_c2, \"StyledGrid\");\n$RefreshReg$(_c3, \"GridCell\");\n$RefreshReg$(_c4, \"Grid\");\n$RefreshReg$(_c5, \"MultiLayerGrid\");","map":{"version":3,"names":["React","styled","motion","jsxDEV","_jsxDEV","LayerContainer","div","_c","StyledGrid","columns","width","rows","height","gap","_c2","GridCell","_c3","Grid","style","children","Array","map","_","index","drag","dragConstraints","top","left","right","bottom","fileName","_jsxFileName","lineNumber","columnNumber","_c4","MultiLayerGrid","zIndex","backgroundColor","_c5","$RefreshReg$"],"sources":["/home/peplxx/projects/mahjong/mahjong-game/src/components/grid.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\ntype GridProps = {\n  columns: number;\n  rows: number;\n  gap: number;\n  height: number;\n  width: number;\n  style?: React.CSSProperties;\n};\n\nconst LayerContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst StyledGrid = styled(motion.div)<GridProps>`\n  display: grid;\n  grid-template-columns: repeat(${({ columns }) => columns}, ${({ width }) => width}px);\n  grid-template-rows: repeat(${({ rows }) => rows}, ${({ height }) => height}px);\n  grid-gap: ${({ gap }) => gap}px;\n  justify-content: center;\n  align-content: center;\n  background-color: rgba(40, 44, 52, 0.8); /* Semi-transparent background */\n  position: absolute; /* Allow overlapping layers */\n  top: 0;\n  height: 100%;\n  width: 100%;\n  left: 0;\n`;\n\nconst GridCell = styled(motion.div)`\n  background-color: red;\n  border: 1px solid white;\n  &:hover {\n    transform: scale(1.05);\n  }\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nconst Grid = ({ columns, rows, gap, height, width, style }: GridProps) => {\n  return (\n    <StyledGrid columns={columns} rows={rows} gap={gap} height={height} width={width} style={style}>\n      {[...Array(columns * rows)].map((_, index) => (\n        <GridCell key={index} drag dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }} />\n      ))}\n    </StyledGrid>\n  );\n};\n\nconst MultiLayerGrid = () => {\n  return (\n    <LayerContainer>\n      {/* First grid layer */}\n      <Grid columns={6} rows={6} gap={5} height={150} width={100} style={{ zIndex: 1, backgroundColor: '#41454C' }} />\n      \n      {/* Second grid layer */}\n      <Grid columns={4} rows={4} gap={5}\n        height={150}\n        width={100}\n        style={{ zIndex: 2}}\n      />\n    </LayerContainer>\n  );\n};\n\nexport default MultiLayerGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}