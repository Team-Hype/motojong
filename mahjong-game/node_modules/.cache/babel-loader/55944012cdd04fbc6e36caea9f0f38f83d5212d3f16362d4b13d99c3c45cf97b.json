{"ast":null,"code":"var _jsxFileName = \"/home/peplxx/projects/mahjong/mahjong-game/src/components/GridCell.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGridCell = styled(motion.div)`\n  background-color: ${({\n  isSelected\n}) => isSelected ? 'rgba(40, 44, 52, 0.5)' : 'red'};\n  background-image: ${({\n  backgroundImage\n}) => backgroundImage ? `url(${backgroundImage})` : 'none'};\n  background-size: cover;\n  background-position: center;\n  cursor: grab;\n`;\n_c = StyledGridCell;\nconst GridCell = ({\n  isSelected,\n  onClick,\n  backgroundImage\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledGridCell, {\n    onClick: onClick,\n    isSelected: isSelected,\n    backgroundImage: backgroundImage,\n    whileHover: {\n      scale: 1.05\n    },\n    whileTap: {\n      scale: 0.95\n    },\n    whileDrag: {\n      scale: 0.95\n    },\n    drag: true,\n    dragConstraints: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c2 = GridCell;\nexport default GridCell;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledGridCell\");\n$RefreshReg$(_c2, \"GridCell\");","map":{"version":3,"names":["React","styled","motion","jsxDEV","_jsxDEV","StyledGridCell","div","isSelected","backgroundImage","_c","GridCell","onClick","whileHover","scale","whileTap","whileDrag","drag","dragConstraints","top","left","right","bottom","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/peplxx/projects/mahjong/mahjong-game/src/components/GridCell.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\ntype GridCellProps = {\n  isSelected: boolean;\n  onClick: () => void;\n  backgroundImage?: string;\n};\n\nconst StyledGridCell = styled(motion.div)<{ isSelected: boolean; backgroundImage?: string }>`\n  background-color: ${({ isSelected }) => (isSelected ? 'rgba(40, 44, 52, 0.5)' : 'red')};\n  background-image: ${({ backgroundImage }) => (backgroundImage ? `url(${backgroundImage})` : 'none')};\n  background-size: cover;\n  background-position: center;\n  cursor: grab;\n`;\n\nconst GridCell: React.FC<GridCellProps> = ({ isSelected, onClick, backgroundImage }) => {\n  return (\n    <StyledGridCell\n      onClick={onClick}\n      isSelected={isSelected}\n      backgroundImage={backgroundImage}\n      whileHover={{ scale: 1.05 }}\n      whileTap={{ scale: 0.95 }}\n      whileDrag={{ scale: 0.95 }}\n      drag\n      dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }}\n    />\n  );\n};\n\nexport default GridCell;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQvC,MAAMC,cAAc,GAAGJ,MAAM,CAACC,MAAM,CAACI,GAAG,CAAoD;AAC5F,sBAAsB,CAAC;EAAEC;AAAW,CAAC,KAAMA,UAAU,GAAG,uBAAuB,GAAG,KAAM;AACxF,sBAAsB,CAAC;EAAEC;AAAgB,CAAC,KAAMA,eAAe,GAAG,OAAOA,eAAe,GAAG,GAAG,MAAO;AACrG;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIJ,cAAc;AAQpB,MAAMK,QAAiC,GAAGA,CAAC;EAAEH,UAAU;EAAEI,OAAO;EAAEH;AAAgB,CAAC,KAAK;EACtF,oBACEJ,OAAA,CAACC,cAAc;IACbM,OAAO,EAAEA,OAAQ;IACjBJ,UAAU,EAAEA,UAAW;IACvBC,eAAe,EAAEA,eAAgB;IACjCI,UAAU,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAE;IAC5BC,QAAQ,EAAE;MAAED,KAAK,EAAE;IAAK,CAAE;IAC1BE,SAAS,EAAE;MAAEF,KAAK,EAAE;IAAK,CAAE;IAC3BG,IAAI;IACJC,eAAe,EAAE;MAAEC,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEN,CAAC;AAACC,GAAA,GAbIhB,QAAiC;AAevC,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}