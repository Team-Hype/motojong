{"ast":null,"code":"const isBlocked = (index, columns, rows, mahjongs) => {\n  const row = Math.floor(index / columns);\n  const col = index % columns;\n\n  // Check if the cell itself is null (e.g., empty space)\n  if (mahjongs[row][col] === null) {\n    return true;\n  }\n\n  // Check surrounding cells or conditions to determine if the cell is blocked\n  // For example, check if neighboring cells are blocked or empty\n  return false; // Replace with actual logic as needed\n};","map":{"version":3,"names":["isBlocked","index","columns","rows","mahjongs","row","Math","floor","col"],"sources":["/home/peplxx/projects/mahjong/mahjong-game/src/components/Grid.tsx"],"sourcesContent":["const isBlocked = (index: number, columns: number, rows: number, mahjongs: (Mahjong | null)[][]): boolean => {\n    const row = Math.floor(index / columns);\n    const col = index % columns;\n  \n    // Check if the cell itself is null (e.g., empty space)\n    if (mahjongs[row][col] === null) {\n      return true;\n    }\n  \n    // Check surrounding cells or conditions to determine if the cell is blocked\n    // For example, check if neighboring cells are blocked or empty\n    return false; // Replace with actual logic as needed\n  };\n  "],"mappings":"AAAA,MAAMA,SAAS,GAAGA,CAACC,KAAa,EAAEC,OAAe,EAAEC,IAAY,EAAEC,QAA8B,KAAc;EACzG,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,GAAGC,OAAO,CAAC;EACvC,MAAMM,GAAG,GAAGP,KAAK,GAAGC,OAAO;;EAE3B;EACA,IAAIE,QAAQ,CAACC,GAAG,CAAC,CAACG,GAAG,CAAC,KAAK,IAAI,EAAE;IAC/B,OAAO,IAAI;EACb;;EAEA;EACA;EACA,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}