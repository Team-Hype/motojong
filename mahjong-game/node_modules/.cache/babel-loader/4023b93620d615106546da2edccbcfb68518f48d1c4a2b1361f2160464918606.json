{"ast":null,"code":"var _jsxFileName = \"/home/peplxx/projects/mahjong/mahjong-game/src/components/Grid.tsx\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = styled(motion.div)`\n  position: absolute;\n  width: ${({\n  width\n}) => width}px;\n  height: ${({\n  height\n}) => height}px;\n  top: ${({\n  row,\n  height,\n  gap\n}) => row * (height + gap)}px;\n  left: ${({\n  column,\n  width,\n  gap\n}) => column * (width + gap)}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #ccc;\n  background-color: ${({\n  isSelected\n}) => isSelected ? 'rgba(0, 128, 255, 0.3)' : 'white'};\n  cursor: pointer;\n`;\n_c = Cell;\nconst GridCell = ({\n  isBlocked,\n  column,\n  row,\n  gap,\n  height,\n  width,\n  isSelected,\n  onClick,\n  mahjong\n}) => {\n  return /*#__PURE__*/_jsxDEV(Cell, {\n    height: height,\n    width: width,\n    gap: gap,\n    row: row,\n    column: column,\n    onClick: onClick,\n    initial: {\n      scale: 1\n    },\n    whileHover: {\n      scale: 1.1\n    },\n    transition: {\n      type: 'spring',\n      stiffness: 300\n    },\n    animate: isBlocked || !mahjong ? {\n      opacity: 0.5\n    } : {\n      opacity: 1\n    },\n    children: mahjong && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mahjong.image,\n      alt: `Mahjong ${mahjong.image}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c2 = GridCell;\nexport default GridCell;\nvar _c, _c2;\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"GridCell\");","map":{"version":3,"names":["React","motion","styled","jsxDEV","_jsxDEV","Cell","div","width","height","row","gap","column","isSelected","_c","GridCell","isBlocked","onClick","mahjong","initial","scale","whileHover","transition","type","stiffness","animate","opacity","children","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/peplxx/projects/mahjong/mahjong-game/src/components/Grid.tsx"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { Mahjong } from '../game/mahjongs/Mahjong';\n\ntype GridCellProps = {\n  isBlocked: boolean;\n  column: number;\n  row: number;\n  gap: number;\n  height: number;\n  width: number;\n  isSelected: boolean;\n  onClick: () => void;\n  mahjong: Mahjong | null;\n};\n\nconst Cell = styled(motion.div)<{ height: number; width: number; gap: number }>`\n  position: absolute;\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n  top: ${({ row, height, gap }) => row * (height + gap)}px;\n  left: ${({ column, width, gap }) => column * (width + gap)}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #ccc;\n  background-color: ${({ isSelected }) => (isSelected ? 'rgba(0, 128, 255, 0.3)' : 'white')};\n  cursor: pointer;\n`;\n\nconst GridCell: React.FC<GridCellProps> = ({\n  isBlocked,\n  column,\n  row,\n  gap,\n  height,\n  width,\n  isSelected,\n  onClick,\n  mahjong,\n}) => {\n  return (\n    <Cell\n      height={height}\n      width={width}\n      gap={gap}\n      row={row}\n      column={column}\n      onClick={onClick}\n      initial={{ scale: 1 }}\n      whileHover={{ scale: 1.1 }}\n      transition={{ type: 'spring', stiffness: 300 }}\n      animate={isBlocked || !mahjong ? { opacity: 0.5 } : { opacity: 1 }}\n    >\n      {/* Add a visual representation for Mahjong tiles */}\n      {mahjong && <img src={mahjong.image} alt={`Mahjong ${mahjong.image}`} />}\n    </Cell>\n  );\n};\n\nexport default GridCell;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAevC,MAAMC,IAAI,GAAGH,MAAM,CAACD,MAAM,CAACK,GAAG,CAAiD;AAC/E;AACA,WAAW,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK;AAC/B,YAAY,CAAC;EAAEC;AAAO,CAAC,KAAKA,MAAM;AAClC,SAAS,CAAC;EAAEC,GAAG;EAAED,MAAM;EAAEE;AAAI,CAAC,KAAKD,GAAG,IAAID,MAAM,GAAGE,GAAG,CAAC;AACvD,UAAU,CAAC;EAAEC,MAAM;EAAEJ,KAAK;EAAEG;AAAI,CAAC,KAAKC,MAAM,IAAIJ,KAAK,GAAGG,GAAG,CAAC;AAC5D;AACA;AACA;AACA;AACA,sBAAsB,CAAC;EAAEE;AAAW,CAAC,KAAMA,UAAU,GAAG,wBAAwB,GAAG,OAAQ;AAC3F;AACA,CAAC;AAACC,EAAA,GAZIR,IAAI;AAcV,MAAMS,QAAiC,GAAGA,CAAC;EACzCC,SAAS;EACTJ,MAAM;EACNF,GAAG;EACHC,GAAG;EACHF,MAAM;EACND,KAAK;EACLK,UAAU;EACVI,OAAO;EACPC;AACF,CAAC,KAAK;EACJ,oBACEb,OAAA,CAACC,IAAI;IACHG,MAAM,EAAEA,MAAO;IACfD,KAAK,EAAEA,KAAM;IACbG,GAAG,EAAEA,GAAI;IACTD,GAAG,EAAEA,GAAI;IACTE,MAAM,EAAEA,MAAO;IACfK,OAAO,EAAEA,OAAQ;IACjBE,OAAO,EAAE;MAAEC,KAAK,EAAE;IAAE,CAAE;IACtBC,UAAU,EAAE;MAAED,KAAK,EAAE;IAAI,CAAE;IAC3BE,UAAU,EAAE;MAAEC,IAAI,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAI,CAAE;IAC/CC,OAAO,EAAET,SAAS,IAAI,CAACE,OAAO,GAAG;MAAEQ,OAAO,EAAE;IAAI,CAAC,GAAG;MAAEA,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,EAGlET,OAAO,iBAAIb,OAAA;MAAKuB,GAAG,EAAEV,OAAO,CAACW,KAAM;MAACC,GAAG,EAAE,WAAWZ,OAAO,CAACW,KAAK;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEX,CAAC;AAACC,GAAA,GA5BIpB,QAAiC;AA8BvC,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}