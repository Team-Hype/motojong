{"ast":null,"code":"var _jsxFileName = \"/home/peplxx/projects/mahjong/mahjong-game/src/components/Grid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport GridCell from './GridCell'; // Import the encapsulated GridCell component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGrid = styled(motion.div)`\n  position: absolute;\n`;\n_c = StyledGrid;\nconst isBlocked = (index, columns, rows, mahjongs) => {\n  return false;\n};\nconst Grid = ({\n  columns,\n  rows,\n  gap,\n  height,\n  width,\n  style,\n  mahjongs\n}) => {\n  _s();\n  const [selectedCells, setSelectedCells] = useState({});\n  const onCellClick = index => {\n    setSelectedCells(prevSelectedCells => ({\n      ...prevSelectedCells,\n      [index]: !prevSelectedCells[index]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(StyledGrid, {\n    columns: columns,\n    rows: rows,\n    gap: gap,\n    height: height / 2,\n    width: width / 2,\n    style: style,\n    mahjongs: mahjongs,\n    children: mahjongs.flat().map((mahjong, index) => /*#__PURE__*/_jsxDEV(GridCell, {\n      isBlocked: isBlocked(index, columns, rows, mahjongs),\n      column: index % columns,\n      row: Math.floor(index / columns),\n      gap: gap,\n      height: height,\n      width: width,\n      isSelected: selectedCells[index] || false,\n      onClick: () => onCellClick(index),\n      mahjong: mahjong\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"GLWHfO5BGqkKP3qftTnleplvfGg=\");\n_c2 = Grid;\nexport default Grid;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledGrid\");\n$RefreshReg$(_c2, \"Grid\");","map":{"version":3,"names":["React","useState","styled","motion","GridCell","jsxDEV","_jsxDEV","StyledGrid","div","_c","isBlocked","index","columns","rows","mahjongs","Grid","gap","height","width","style","_s","selectedCells","setSelectedCells","onCellClick","prevSelectedCells","children","flat","map","mahjong","column","row","Math","floor","isSelected","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/peplxx/projects/mahjong/mahjong-game/src/components/Grid.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport GridCell from './GridCell'; // Import the encapsulated GridCell component\nimport { Mahjong } from './game/mahjongs/Mahjong';\n\ntype GridProps = {\n  columns: number;\n  rows: number;\n  gap: number;\n  height: number;\n  width: number;\n  style?: React.CSSProperties;\n  mahjongs: (Mahjong | null)[][];\n};\n\nconst StyledGrid = styled(motion.div)<GridProps>`\n  position: absolute;\n`;\nconst isBlocked = (index: number, columns: number, rows: number, mahjongs: (Mahjong | null)[][]) => {\n  return false;\n};\n\nconst Grid: React.FC<GridProps> = ({ columns, rows, gap, height, width, style, mahjongs }) => {\n  const [selectedCells, setSelectedCells] = useState<{ [key: number]: boolean }>({});\n\n  const onCellClick = (index: number) => {\n    setSelectedCells((prevSelectedCells) => ({\n      ...prevSelectedCells,\n      [index]: !prevSelectedCells[index],\n    }));\n  };\n\n  return (\n    <StyledGrid columns={columns} rows={rows} gap={gap} height={height/2} width={width/2} style={style} mahjongs={mahjongs}>\n      {mahjongs.flat().map((mahjong, index) => (\n        <GridCell\n          key={index}\n          isBlocked={isBlocked(index, columns, rows, mahjongs)}\n          column={index % columns}\n          row={Math.floor(index / columns)}\n          gap={gap}\n          height={height}\n          width={width}\n          isSelected={selectedCells[index] || false}\n          onClick={() => onCellClick(index)}\n          mahjong={mahjong}\n        />\n      ))}\n    </StyledGrid>\n  );\n};\n\nexport default Grid;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAanC,MAAMC,UAAU,GAAGL,MAAM,CAACC,MAAM,CAACK,GAAG,CAAY;AAChD;AACA,CAAC;AAACC,EAAA,GAFIF,UAAU;AAGhB,MAAMG,SAAS,GAAGA,CAACC,KAAa,EAAEC,OAAe,EAAEC,IAAY,EAAEC,QAA8B,KAAK;EAClG,OAAO,KAAK;AACd,CAAC;AAED,MAAMC,IAAyB,GAAGA,CAAC;EAAEH,OAAO;EAAEC,IAAI;EAAEG,GAAG;EAAEC,MAAM;EAAEC,KAAK;EAAEC,KAAK;EAAEL;AAAS,CAAC,KAAK;EAAAM,EAAA;EAC5F,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAA6B,CAAC,CAAC,CAAC;EAElF,MAAMsB,WAAW,GAAIZ,KAAa,IAAK;IACrCW,gBAAgB,CAAEE,iBAAiB,KAAM;MACvC,GAAGA,iBAAiB;MACpB,CAACb,KAAK,GAAG,CAACa,iBAAiB,CAACb,KAAK;IACnC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEL,OAAA,CAACC,UAAU;IAACK,OAAO,EAAEA,OAAQ;IAACC,IAAI,EAAEA,IAAK;IAACG,GAAG,EAAEA,GAAI;IAACC,MAAM,EAAEA,MAAM,GAAC,CAAE;IAACC,KAAK,EAAEA,KAAK,GAAC,CAAE;IAACC,KAAK,EAAEA,KAAM;IAACL,QAAQ,EAAEA,QAAS;IAAAW,QAAA,EACpHX,QAAQ,CAACY,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEjB,KAAK,kBAClCL,OAAA,CAACF,QAAQ;MAEPM,SAAS,EAAEA,SAAS,CAACC,KAAK,EAAEC,OAAO,EAAEC,IAAI,EAAEC,QAAQ,CAAE;MACrDe,MAAM,EAAElB,KAAK,GAAGC,OAAQ;MACxBkB,GAAG,EAAEC,IAAI,CAACC,KAAK,CAACrB,KAAK,GAAGC,OAAO,CAAE;MACjCI,GAAG,EAAEA,GAAI;MACTC,MAAM,EAAEA,MAAO;MACfC,KAAK,EAAEA,KAAM;MACbe,UAAU,EAAEZ,aAAa,CAACV,KAAK,CAAC,IAAI,KAAM;MAC1CuB,OAAO,EAAEA,CAAA,KAAMX,WAAW,CAACZ,KAAK,CAAE;MAClCiB,OAAO,EAAEA;IAAQ,GATZjB,KAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEjB,CAAC;AAAClB,EAAA,CA5BIL,IAAyB;AAAAwB,GAAA,GAAzBxB,IAAyB;AA8B/B,eAAeA,IAAI;AAAC,IAAAN,EAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}