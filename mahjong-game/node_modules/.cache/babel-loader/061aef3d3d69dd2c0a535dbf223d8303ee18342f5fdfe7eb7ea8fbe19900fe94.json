{"ast":null,"code":"var _jsxFileName = \"/home/peplxx/projects/mahjong/mahjong-game/src/components/GridCell.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGridCell = styled(motion.div)`\n  position: absolute;\n  top: ${({\n  row,\n  height,\n  gap\n}) => row * (height + gap)}px;\n  left: ${({\n  column,\n  width,\n  gap\n}) => column * (width + gap)}px;\n  width: ${({\n  width\n}) => width}px;\n  height: ${({\n  height\n}) => height}px;\n`;\n_c = StyledGridCell;\nconst GridCell = ({\n  isSelected,\n  onClick,\n  mahjong\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledGridCell, {\n    onClick: onClick,\n    isSelected: isSelected,\n    mahjong: mahjong,\n    whileHover: {\n      scale: 1.05\n    },\n    whileTap: {\n      scale: 0.95\n    },\n    whileDrag: {\n      scale: 0.95\n    },\n    drag: true,\n    dragConstraints: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c2 = GridCell;\nexport default GridCell;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledGridCell\");\n$RefreshReg$(_c2, \"GridCell\");","map":{"version":3,"names":["React","styled","motion","jsxDEV","_jsxDEV","StyledGridCell","div","row","height","gap","column","width","_c","GridCell","isSelected","onClick","mahjong","whileHover","scale","whileTap","whileDrag","drag","dragConstraints","top","left","right","bottom","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/peplxx/projects/mahjong/mahjong-game/src/components/GridCell.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Mahjong } from './game/mahjongs/Mahjong';\n\ntype GridCellProps = {\n  isSelected: boolean;\n  onClick: () => void;\n  mahjong: (Mahjong | null);\n};\n\nconst StyledGridCell = styled(motion.div)<{ row: number; column: number; width: number; height: number; gap: number }>`\n  position: absolute;\n  top: ${({ row, height, gap }) => row * (height + gap)}px;\n  left: ${({ column, width, gap }) => column * (width + gap)}px;\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n`;\n\n\nconst GridCell: React.FC<GridCellProps> = ({ isSelected, onClick, mahjong }) => {\n  return (\n    <StyledGridCell\n      onClick={onClick}\n      isSelected={isSelected}\n      mahjong={mahjong}\n      whileHover={{ scale: 1.05 }}\n      whileTap={{ scale: 0.95 }}\n      whileDrag={{ scale: 0.95 }}\n      drag\n      dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }}\n    />\n  );\n};\n\nexport default GridCell;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASvC,MAAMC,cAAc,GAAGJ,MAAM,CAACC,MAAM,CAACI,GAAG,CAA8E;AACtH;AACA,SAAS,CAAC;EAAEC,GAAG;EAAEC,MAAM;EAAEC;AAAI,CAAC,KAAKF,GAAG,IAAIC,MAAM,GAAGC,GAAG,CAAC;AACvD,UAAU,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEF;AAAI,CAAC,KAAKC,MAAM,IAAIC,KAAK,GAAGF,GAAG,CAAC;AAC5D,WAAW,CAAC;EAAEE;AAAM,CAAC,KAAKA,KAAK;AAC/B,YAAY,CAAC;EAAEH;AAAO,CAAC,KAAKA,MAAM;AAClC,CAAC;AAACI,EAAA,GANIP,cAAc;AASpB,MAAMQ,QAAiC,GAAGA,CAAC;EAAEC,UAAU;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAC9E,oBACEZ,OAAA,CAACC,cAAc;IACbU,OAAO,EAAEA,OAAQ;IACjBD,UAAU,EAAEA,UAAW;IACvBE,OAAO,EAAEA,OAAQ;IACjBC,UAAU,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAE;IAC5BC,QAAQ,EAAE;MAAED,KAAK,EAAE;IAAK,CAAE;IAC1BE,SAAS,EAAE;MAAEF,KAAK,EAAE;IAAK,CAAE;IAC3BG,IAAI;IACJC,eAAe,EAAE;MAAEC,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEN,CAAC;AAACC,GAAA,GAbIlB,QAAiC;AAevC,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}