{"ast":null,"code":"var _jsxFileName = \"/home/peplxx/projects/mahjong/mahjong-game/src/components/MultiLayeredGrid.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { GridCell } from \"./GridCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayerContainer = styled(motion.div)`\n  position: absolute;\n  width: 100%;\n  height: 100vh;\n  background-color: #41454C;\n  \n`;\n_c = LayerContainer;\nconst isLeftRightNeighbour = (index, columns, rows, mahjongs) => {\n  const leftIndex = index - 1;\n  const rightIndex = index + 1;\n  const isLeftNeighbour = leftIndex >= 0 && leftIndex % columns !== 0 && mahjongs[Math.floor(leftIndex / columns)][leftIndex % columns];\n  const isRightNeighbour = rightIndex < columns * rows && rightIndex % columns !== 0 && mahjongs[Math.floor(rightIndex / columns)][rightIndex % columns];\n  const isLeftBounded = index % columns === 0;\n  const isRightBounded = (index + 1) % columns === 0;\n  return !isLeftNeighbour || isLeftBounded || !isRightNeighbour || isRightBounded;\n};\nconst MultiLayerGrid = ({\n  level\n}) => {\n  const cells = level.board.flatMap(layer => layer);\n  return /*#__PURE__*/_jsxDEV(LayerContainer, {\n    level: level,\n    children: cells.map((cell, index) => /*#__PURE__*/_jsxDEV(GridCell, {\n      isBlocked: !isLeftRightNeighbour(index, level.size.x, level.size.y, cells),\n      column: index % level.size.x,\n      row: Math.floor(index / level.size.x),\n      gap: level.size.gap,\n      height: level.size.height,\n      width: level.size.width,\n      isSelected: selectedCells[index] || false,\n      onClick: () => onCellClick(index),\n      mahjong: cell\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MultiLayerGrid;\nexport default MultiLayerGrid;\nvar _c, _c2;\n$RefreshReg$(_c, \"LayerContainer\");\n$RefreshReg$(_c2, \"MultiLayerGrid\");","map":{"version":3,"names":["React","styled","motion","GridCell","jsxDEV","_jsxDEV","LayerContainer","div","_c","isLeftRightNeighbour","index","columns","rows","mahjongs","leftIndex","rightIndex","isLeftNeighbour","Math","floor","isRightNeighbour","isLeftBounded","isRightBounded","MultiLayerGrid","level","cells","board","flatMap","layer","children","map","cell","isBlocked","size","x","y","column","row","gap","height","width","isSelected","selectedCells","onClick","onCellClick","mahjong","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/peplxx/projects/mahjong/mahjong-game/src/components/MultiLayeredGrid.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Grid from './Grid';\nimport { Level } from './game/Level';\nimport { Mahjong } from './game/mahjongs/Mahjong';\nimport {GridCell} from \"./GridCell\";\nconst LayerContainer = styled(motion.div)<{level: Level}>`\n  position: absolute;\n  width: 100%;\n  height: 100vh;\n  background-color: #41454C;\n  \n`;\nconst isLeftRightNeighbour = (index: number, columns: number, rows: number, mahjongs: (Mahjong | null)[][]) => {\n    const leftIndex = index - 1;\n    const rightIndex = index + 1;\n    const isLeftNeighbour = leftIndex >= 0 && leftIndex % columns !== 0 && mahjongs[Math.floor(leftIndex / columns)][leftIndex % columns];\n    const isRightNeighbour = rightIndex < columns * rows && rightIndex % columns !== 0 && mahjongs[Math.floor(rightIndex / columns)][rightIndex % columns];\n    const isLeftBounded = index % columns === 0;\n    const isRightBounded = (index + 1) % columns === 0;\n    return (!isLeftNeighbour || isLeftBounded) || (!isRightNeighbour || isRightBounded);\n  };\ntype MultiLayerGridProps = {\n  level: Level;\n};\nconst MultiLayerGrid: React.FC<MultiLayerGridProps> = ({ level }) => {\n  const cells = level.board.flatMap((layer) => layer);\n\n  return (\n    <LayerContainer level={level}>\n      {cells.map((cell, index) => (\n        <GridCell\n          key={index}\n          isBlocked={!isLeftRightNeighbour(index, level.size.x, level.size.y, cells)}\n          column={index % level.size.x}\n          row={Math.floor(index / level.size.x)}\n          gap={level.size.gap}\n          height={level.size.height}\n          width={level.size.width}\n          isSelected={selectedCells[index] || false}\n          onClick={() => onCellClick(index)}\n          mahjong={cell}\n        />\n      ))}\n    </LayerContainer>\n  );\n};\n\nexport default MultiLayerGrid;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,eAAe;AAItC,SAAQC,QAAQ,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpC,MAAMC,cAAc,GAAGL,MAAM,CAACC,MAAM,CAACK,GAAG,CAAiB;AACzD;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,cAAc;AAOpB,MAAMG,oBAAoB,GAAGA,CAACC,KAAa,EAAEC,OAAe,EAAEC,IAAY,EAAEC,QAA8B,KAAK;EAC3G,MAAMC,SAAS,GAAGJ,KAAK,GAAG,CAAC;EAC3B,MAAMK,UAAU,GAAGL,KAAK,GAAG,CAAC;EAC5B,MAAMM,eAAe,GAAGF,SAAS,IAAI,CAAC,IAAIA,SAAS,GAAGH,OAAO,KAAK,CAAC,IAAIE,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACJ,SAAS,GAAGH,OAAO,CAAC,CAAC,CAACG,SAAS,GAAGH,OAAO,CAAC;EACrI,MAAMQ,gBAAgB,GAAGJ,UAAU,GAAGJ,OAAO,GAAGC,IAAI,IAAIG,UAAU,GAAGJ,OAAO,KAAK,CAAC,IAAIE,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACH,UAAU,GAAGJ,OAAO,CAAC,CAAC,CAACI,UAAU,GAAGJ,OAAO,CAAC;EACtJ,MAAMS,aAAa,GAAGV,KAAK,GAAGC,OAAO,KAAK,CAAC;EAC3C,MAAMU,cAAc,GAAG,CAACX,KAAK,GAAG,CAAC,IAAIC,OAAO,KAAK,CAAC;EAClD,OAAQ,CAACK,eAAe,IAAII,aAAa,IAAM,CAACD,gBAAgB,IAAIE,cAAe;AACrF,CAAC;AAIH,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACnE,MAAMC,KAAK,GAAGD,KAAK,CAACE,KAAK,CAACC,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAAC;EAEnD,oBACEtB,OAAA,CAACC,cAAc;IAACiB,KAAK,EAAEA,KAAM;IAAAK,QAAA,EAC1BJ,KAAK,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEpB,KAAK,kBACrBL,OAAA,CAACF,QAAQ;MAEP4B,SAAS,EAAE,CAACtB,oBAAoB,CAACC,KAAK,EAAEa,KAAK,CAACS,IAAI,CAACC,CAAC,EAAEV,KAAK,CAACS,IAAI,CAACE,CAAC,EAAEV,KAAK,CAAE;MAC3EW,MAAM,EAAEzB,KAAK,GAAGa,KAAK,CAACS,IAAI,CAACC,CAAE;MAC7BG,GAAG,EAAEnB,IAAI,CAACC,KAAK,CAACR,KAAK,GAAGa,KAAK,CAACS,IAAI,CAACC,CAAC,CAAE;MACtCI,GAAG,EAAEd,KAAK,CAACS,IAAI,CAACK,GAAI;MACpBC,MAAM,EAAEf,KAAK,CAACS,IAAI,CAACM,MAAO;MAC1BC,KAAK,EAAEhB,KAAK,CAACS,IAAI,CAACO,KAAM;MACxBC,UAAU,EAAEC,aAAa,CAAC/B,KAAK,CAAC,IAAI,KAAM;MAC1CgC,OAAO,EAAEA,CAAA,KAAMC,WAAW,CAACjC,KAAK,CAAE;MAClCkC,OAAO,EAAEd;IAAK,GATTpB,KAAK;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAErB,CAAC;AAACC,GAAA,GArBI3B,cAA6C;AAuBnD,eAAeA,cAAc;AAAC,IAAAd,EAAA,EAAAyC,GAAA;AAAAC,YAAA,CAAA1C,EAAA;AAAA0C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}