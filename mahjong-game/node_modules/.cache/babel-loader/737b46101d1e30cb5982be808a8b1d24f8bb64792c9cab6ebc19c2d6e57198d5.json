{"ast":null,"code":"var _jsxFileName = \"/home/peplxx/projects/mahjong/mahjong-game/src/components/GridCell.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGridCell = styled(motion.div)`\n  background-image: ${({\n  mahjong\n}) => `url(${mahjong ? mahjong.image : ''})`};\n  background-size: cover;\n  background-position: center;\n  cursor: ${({\n  isBlocked\n}) => isBlocked ? 'not-allowed' : 'grab'};\n  position: absolute;\n  top: ${({\n  row,\n  height,\n  gap\n}) => row * (height + gap)}px;\n  left: ${({\n  column,\n  width,\n  gap\n}) => column * (width + gap)}px;\n  width: ${({\n  width\n}) => width * 2}px;\n  height: ${({\n  height\n}) => height * 2}px;\n  ${({\n  mahjong\n}) => !mahjong && 'pointer-events: none;'}\n  filter: ${({\n  isBlocked\n}) => isBlocked ? 'brightness(0.5)' : 'none'};\n  ${({\n  isBlocked,\n  isSelected\n}) => isBlocked ? '' : isSelected && 'filter: brightness(0.7) contrast(1.1) sepia(0.7) hue-rotate(10deg) saturate(3);'}\n`;\n_c = StyledGridCell;\nconst shakeAnimation = {\n  initial: {\n    x: 0\n  },\n  animate: {\n    x: [0, -10, 10, -10, 10, 0],\n    transition: {\n      duration: 0.5,\n      times: [0, 0.1, 0.3, 0.5, 0.7, 1],\n      type: 'spring',\n      stiffness: 200,\n      damping: 15\n    }\n  }\n};\nconst GridCell = ({\n  column,\n  row,\n  gap,\n  height,\n  width,\n  isBlocked,\n  isSelected,\n  onClick,\n  mahjong,\n  animateMatch // Receive this prop\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledGridCell, {\n    isBlocked: isBlocked,\n    onClick: isBlocked ? e => e.preventDefault() : onClick,\n    isSelected: isSelected,\n    mahjong: mahjong,\n    column: column,\n    row: row,\n    gap: gap,\n    height: height,\n    width: width,\n    drag: isBlocked ? false : true,\n    dragConstraints: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    initial: animateMatch ? {\n      x: 0\n    } : undefined,\n    animate: animateMatch ? shakeAnimation.animate : undefined // Apply the shake animation when needed\n    ,\n    exit: {\n      opacity: 0,\n      scale: 0.8\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c2 = GridCell;\nexport default GridCell;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledGridCell\");\n$RefreshReg$(_c2, \"GridCell\");","map":{"version":3,"names":["React","styled","motion","jsxDEV","_jsxDEV","StyledGridCell","div","mahjong","image","isBlocked","row","height","gap","column","width","isSelected","_c","shakeAnimation","initial","x","animate","transition","duration","times","type","stiffness","damping","GridCell","onClick","animateMatch","e","preventDefault","drag","dragConstraints","top","left","right","bottom","undefined","exit","opacity","scale","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/peplxx/projects/mahjong/mahjong-game/src/components/GridCell.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Mahjong } from './game/mahjongs/Mahjong';\n\ntype GridCellProps = {\n  isSelected: boolean;\n  isBlocked: boolean;\n  onClick: (e: React.MouseEvent) => void;\n  mahjong: (Mahjong | null);\n  column: number;\n  row: number;\n  gap: number;\n  height: number;\n  width: number;\n  animateMatch: boolean; // Add this prop\n};\n\nconst StyledGridCell = styled(motion.div)<{\n  row: number;\n  column: number;\n  width: number;\n  height: number;\n  gap: number;\n  isBlocked: boolean;\n  isSelected: boolean;\n  mahjong: (Mahjong | null);\n}>`\n  background-image: ${({ mahjong }) => `url(${mahjong ? mahjong.image : ''})`};\n  background-size: cover;\n  background-position: center;\n  cursor: ${({ isBlocked }) => (isBlocked ? 'not-allowed' : 'grab')};\n  position: absolute;\n  top: ${({ row, height, gap }) => (row * (height + gap))}px;\n  left: ${({ column, width, gap }) => column * (width + gap)}px;\n  width: ${({ width }) => width * 2}px;\n  height: ${({ height }) => height * 2}px;\n  ${({ mahjong }) => !mahjong && 'pointer-events: none;'}\n  filter: ${({ isBlocked }) => (isBlocked ? 'brightness(0.5)' : 'none')};\n  ${({ isBlocked, isSelected }) => isBlocked ? '' : isSelected && 'filter: brightness(0.7) contrast(1.1) sepia(0.7) hue-rotate(10deg) saturate(3);'}\n`;\n\nconst shakeAnimation = {\n  initial: { x: 0 },\n  animate: {\n    x: [0, -10, 10, -10, 10, 0],\n    transition: {\n      duration: 0.5,\n      times: [0, 0.1, 0.3, 0.5, 0.7, 1],\n      type: 'spring',\n      stiffness: 200,\n      damping: 15,\n    },\n  },\n};\n\nconst GridCell: React.FC<GridCellProps> = ({\n  column,\n  row,\n  gap,\n  height,\n  width,\n  isBlocked,\n  isSelected,\n  onClick,\n  mahjong,\n  animateMatch, // Receive this prop\n}) => {\n  return (\n    <StyledGridCell\n      isBlocked={isBlocked}\n      onClick={isBlocked ? (e) => e.preventDefault() : onClick}\n      isSelected={isSelected}\n      mahjong={mahjong}\n      column={column}\n      row={row}\n      gap={gap}\n      height={height}\n      width={width}\n      drag={isBlocked ? false : true}\n      dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }}\n      initial={animateMatch ? { x: 0 } : undefined}\n      animate={animateMatch ? shakeAnimation.animate : undefined} // Apply the shake animation when needed\n      exit={{ opacity: 0, scale: 0.8 }}\n    />\n  );\n};\n\nexport default GridCell;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}